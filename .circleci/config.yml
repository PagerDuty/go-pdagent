version: 2.1

orbs:
  git: pagerduty/git@0.0.3

only-release-tags: &only-release-tags
  filters:
    tags:
      only: /v[0-9]+(\.[0-9]+)*(-.*)*/

jobs:
  test:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - git/rebase_on_main
      - run: go mod download
      - run: make
  release-test:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - git/rebase_on_main
      - run:
          name: Setup GPG
          command: |
            echo "$PACKAGES_GPG_KEY" | base64 --decode | gpg --import --no-tty --batch --yes
            echo "allow-preset-passphrase" > ~/.gnupg/gpg-agent.conf
            gpg-connect-agent RELOADAGENT /bye
            echo "$PACKAGES_GPG_PASSPHRASE" | /usr/lib/gnupg2/gpg-preset-passphrase --preset 61D6904F84D3B62ED5FB48BCE62DFA2C2757CF91
      - run:
          name: Cut release
          command: curl -sL https://git.io/goreleaser | bash -s -- --snapshot
  release:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - git/rebase_on_main
      - run:
          name: Setup GPG
          command: |
            echo "$PACKAGES_GPG_KEY" | base64 --decode | gpg --import --no-tty --batch --yes
            echo "allow-preset-passphrase" > ~/.gnupg/gpg-agent.conf
            gpg-connect-agent RELOADAGENT /bye
            echo "$PACKAGES_GPG_PASSPHRASE" | /usr/lib/gnupg2/gpg-preset-passphrase --preset 61D6904F84D3B62ED5FB48BCE62DFA2C2757CF91
      - run:
          name: Cut release
          command: curl -sL https://git.io/goreleaser | bash
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - release-test
  tagged-release:
    jobs:
      - test: *only-release-tags
      - release-test: *only-release-tags
      - release:
          <<: *only-release-tags
          requires:
            - test
            - release-test
